pipeline {
    agent any
    
    environment {
        // github 
        gitCred = 'TGRITDEV'
        gitRepo = 'git@github.com:DEVELOPERITJNE/ms-portal-web.git'
        gitBranch = 'prod'

        // registry 
        registryCredentials = '1bba979e-5f57-4c84-98f9-7e9eca3d7153' // id credentials
        registryUrl = "${REGISTRY_HOST}" // url server registry

        // k8s
        k8sCloud = ""
        k8sCluster = "kubernetes"
        k8sCredential = "e328a9e2-f1c8-4734-aca4-84261caebd7a"
        k8sURL = "https://10.26.11.70:6443"
        k8sFile = "k8s-prod.yaml"
        k8sNamespace = "k8s-portal"
        
        // image
        imageName = 'ms-portal-web-prod' // image name
        imageTag = '2.2.6' // image tag
 
        // environment
        envFILE=".env.production"
    }

    stages { // stages
        stage('Checkout') {
            steps {
                deleteDir()
                script {
                    git branch: "${gitBranch}", credentialsId: "${gitCred}", url: "${gitRepo}"
                }
            }
        }

        // stage('Install & Build') {
        //     steps {
        //         sh 'npm install'
        //         sh 'npm run build-prod'
        //     }
        // }
        
        stage('Build') { // stage
            steps{ // steps
                script { // script
                    sh "cp -r ${envFILE} .env"
                    sh "docker build --build-arg BUILD_MODE=prod -f dockerfile -t ${imageName}:${imageTag} ."
                }
            }
        }

        stage('Push Docker Image') { // stage ci continues integration
            steps { // steps
                script{ // script
                    // Log in to Docker registry
                    docker.withRegistry("https://${registryUrl}", registryCredentials) {
                        // Push the Docker image to the registry
                        docker.image("${imageName}:${imageTag}").push()
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script{
withKubeConfig(caCertificate: '''-----BEGIN CERTIFICATE-----
MIIDBTCCAe2gAwIBAgIIeHrV3ouKzZEwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
AxMKa3ViZXJuZXRlczAeFw0yNTA0MDkxNTAyMjZaFw0zNTA0MDcxNTA3MjZaMBUx
EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDnmKlOBWXkWA7buX04+tVCP8ebIrhuWFLTzLJfPvyhwmIB11YX2UyyQrBN
zhyTYf86VH54yO4XJSdPvcnQLsbNwUYLbbf66B5VXsKqWS/egtR/qdg+xZDrO/g9
tnEGW3h3FOMGyc+/yArnbaGzikgx/rV1ntGcMemqCDhYFL/TGZEpbpESjtSX6ucg
rHDqtwc7cbTgj4gGKHt6ieVCCjzEMUoLMQYezUzLCKOCVRB79aLQjg8lSiiZIbtF
GtGARL2dcgtYdl+GrFnLg86ppA8UIw5ci1Y3vAx2ixwA6cgS6w6abJk6z0NmmpGm
5cRseyL3lEFi0N2N2Q0eiit8FhBxAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRllI2JakHM/j5TOr4W8qErbyx5UTAV
BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAGlaAIpnSf
Sqntt2/i7No68c6FETL+3C0lqLSbZpe/TebZ1Pu65B0dnrRh0zU2hQXwh+MTymkI
9rqKfpttbxnlCnSisE0HT3QscQWjtxKlSrWsGQ33tHcaYpCK/c7PUCYYH5J8d4Y8
qRLGshAfyg3qP1ecP/1lq6avFHkZEQG3Ce+IP1N7Qu5pLAd1/ipKIsXO003jFaFD
43H3q2dZNrroUZFj6hN7ofY2Hj05pE8ST9SEhpeoAYeWnR9B8jFNz5XsqsawZkmi
46l0sK4bzj/1wvaDZZ25NSXRh3lrVhmO/Iepvr2tZiqHKprtk0hQXR0c7S//xtBR
0Vzp8lSNKGvL
-----END CERTIFICATE-----''', clusterName: "${k8sCluster}", contextName: '', credentialsId: "${k8sCredential}", namespace: "${k8sNamespace}", restrictKubeConfigAccess: true, serverUrl: "${k8sURL}") {
    sh "kubectl apply -f ${k8sFile} -n ${k8sNamespace}"
}
                }
            }
        }
    }

}